#!/bin/bash

# source the ciop functions (e.g. ciop-log)
source ${ciop_job_include}

mode=$(ciop-getparam mode)
# datadir=$(ciop-getparam datadir)

ciop-log INFO "mode: $mode"
ciop-log INFO "datadir: $datadir"

# define the exit codes
SUCCESS=0
ERR_NOINPUT=1
ERR_NOPARAMS=2
ERR_GDAL=4
ERR_COPY=5
ERR_GSAR=7

# add a trap to exit gracefully
function cleanExit ()
{
   local retval=$?
   local msg=""
   case "$retval" in
     $SUCCESS)      msg="Processing successfully concluded";;
     $ERR_NOPARAMS) msg="Outout format not defined";;
     $ERR_GDAL)     msg="Graph processing of job ${JOBNAME} failed (exit code $retval)";;
     $ERR_GSAR)     msg="GSAR processing of job ${JOBNAME} failed (exit code $retval)";;
     *)             msg="Unknown error";;
   esac
   [ "$retval" != "0" ] && ciop-log "ERROR" "Error $retval - $msg, processing aborted" || ciop-log "INFO" "$msg"
   exit $retval
}
trap cleanExit EXIT

# my_echo () { ciop-log INFO "$*" }
# savdir='/application/soilfrost/bin/'

datadir='input_data'
basedir=${mapred_local_dir:-${TMPDIR:-/var/tmp/$$}}

# create the input directory
INPUTDIR="$basedir/$datadir"
mkdir -p $INPUTDIR
# BINDIR="$basedir/bin"
# mkdir -p $BINDIR

# echo $INPUTDIR > $BINDIR/config.cfg

mode=$(ciop-getparam mode)


idl=/usr/local/bin/idl
export LM_LICENSE_FILE=1700@idl.terradue.int

case $mode in
    "refcat")

	OUTPUTDIR=$basedir/outputs/
	mkdir -p $OUTPUTDIR

	ciop-log INFO "*** creating reference catalogue ***"

	while read -r inputurl; do
	     ciop-log INFO "ciop-copy -r 3 -f -O $INPUTDIR $inputurl"
	     ciop-copy -r 3 -f -O $INPUTDIR $inputurl >/dev/null
	done

	# cp /application/soilfrost/bin/datastac1.sav $BINDIR
	# savfil="$BINDIR/datastac1.sav"
	savfil="/application/soilfrost/bin/datastac1.sav"
	#savfil="/application/soilfrost/bin/rt_test.sav"

	# $interp $script average $INPUTDIR $OUTPUTDIR $avg_fname $start_date $end_date > /dev/null 2>&1
        # $idl "-vm=$savfil" -arg "$INPUTDIR"
	ciop-log INFO "contents of input directory <$INPUTDIR>:"
	ciop-log INFO "$(ls $INPUTDIR)"
        ciop-log INFO  "HOME=/tmp $idl -rt=$savfil -args $INPUTDIR $OUTPUTDIR"
        HOME=/tmp $idl "-rt=$savfil" -args "$INPUTDIR" "$OUTPUTDIR" || exit $ERR_GSAR

        # my_echo mv "${savdir}/${datadir}" $OUTPUTDIR/.
        # my_echo mv "${savdir}/${datadir}.sav" $OUTPUTDIR/.
        # my_echo mv "${savdir}/Ref_BS_${datadir}.sav" $OUTPUTDIR/.

	# ciop-log INFO "contents of bindir directory <$BINDIR>:"
	# ciop-log INFO "$(ls $BINDIR)"

	ciop-log INFO "contents of output directory <$OUTPUTDIR>:"
	ciop-log INFO "$(ls $OUTPUTDIR)"

	# ciop-log INFO "mv ${BINDIR}/${datadir} $OUTPUTDIR/."
        # ciop-log INFO "mv ${BINDIR}/${datadir}.sav $OUTPUTDIR/."
        # mv ${BINDIR}/${datadir}.sav $OUTPUTDIR/.
        # ciop-log INFO "mv ${BINDIR}/Ref_BS_${datadir}.sav $OUTPUTDIR/."
        # mv ${BINDIR}/Ref_BS_${datadir}.sav $OUTPUTDIR/.

	ciop-publish $OUTPUTDIR/*
	;;

    "products")

	# OUTPUTDIR="$BINDIR/S3_tif/"
	# mkdir -p $OUTPUTDIR

	INPUTDIR="$basedir"
	OUTPUTDIR="$basedir"

	while read -r inputurl; do
	     ciop-log INFO "ciop-copy -r 3 -f -O $INPUTDIR $inputurl"
	     ciop-copy -r 3 -f -O $INPUTDIR $inputurl
	done

	savfil="/application/soilfrost/bin/s_test1.sav"
	# cp /application/soilfrost/bin/s_test1.sav $BINDIR
	# savfil="$BINDIR/s_test1.sav"

	# mkdir -p $basedir/S3_tif

        ciop-log INFO  "HOME=/tmp $idl -rt=$savfil -arg $INPUTDIR"
        HOME=/tmp $idl "-rt=$savfil" -args "$INPUTDIR" "$OUTPUTDIR"

        idl_exit=$?

        ciop-log INFO "Exit status from IDL: $idl_exit"

        [ "$idl_exit" != "0" ] && ciop-log "ERROR" "IDL Error $idl_exit - $msg, processing aborted" || ciop-log "INFO" "$msg"

	ciop-publish -m $OUTPUTDIR/S3_tif/*

	;;
    *)
	ciop-log WARN "unknown mode $mode"
	exit 1
esac
exit 0
